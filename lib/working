
import path, { join, basename, resolve, extname, dirname } from 'path';
import { readFileSync, } from 'fs';
import resolveJSXContent from './resolveJSXContent.js';
import { createFilter } from 'rollup-pluginutils';
import jsesc from 'jsesc';

export default function importJSXAsString(options = {
    include: '**/*.jsx',
}) {
    const filter = createFilter(options.include, options.exclude);

    return {
        name: 'rollup-plugin-import-extendscript',
        load(id) {
            let transform = filter(id) && /\.jsx?$/.test(id);
            if (!transform) return null;

            const content = readFileSync(id, 'utf8');
            const transformedContent = resolveJSXContent(id, content);
            let escapedContent = jsesc(transformedContent, {
                wrap: true,
                quotes: 'single',
                json: true,
                indentLevel: 2, // Use 2 spaces for indentation
                compact: false, // Don't compact the output
                minimal: false, // Don't use the shortest possible escape sequences
                __nonAsciiOnly: true, // Only escape non-ASCII characters
                // Preserve \t and \n characters
                wrapAttributes: true,
            });
            return `export default ${JSON.stringify(escapedContent)}`;

        }

    };
};



// because this is extendscript and not javascript, we need to escape the backticks (remove this?)
// escapedContent = escapedContent.replace(/`/g, '\\`');